{"ast":null,"code":"var _jsxFileName = \"/Users/mehmetatayurt/Desktop/Software/todoapp/todo-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5001/api/todos\").then(response => response.json()).then(data => setTodos(data)).catch(error => console.error(\"Error\", error));\n  }, []);\n  const addTodo = text => {\n    fetch(\"http://localhost:5001/api/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text\n      })\n    }).then(response => response.json()).then(newTodo => setTodos([...todos, newTodo])).catch(error => console.error(\"Error: \", error));\n  };\n  const toggleComplete = id => {\n    const todo = todos.find(t => t._id === id);\n    fetch(`http://localhost:5001/api/todos/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    }).then(response => response.json()).then(updatedTodo => {\n      const updatedTodos = todos.map(t => t.id === id ? updatedTodo : t);\n      setTodos(updatedTodos);\n    }).catch(error => console.error(\"Error: \", error));\n  };\n  const deleteTodo = id => {\n    fetch(`http://localhost:5001/api/todos/${id}`, {\n      method: \"DELETE\"\n    }).then(() => {\n      const updatedTodos = todos.filter(t => t.id !== id);\n      setTodos(updatedTodos);\n    }).catch(error => console.error(\"Error: \", error));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ToDo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        toggleComplete: toggleComplete,\n        deleteTodo: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","TodoForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","todos","setTodos","fetch","then","response","json","data","catch","error","console","addTodo","text","method","headers","body","JSON","stringify","newTodo","toggleComplete","id","todo","find","t","_id","completed","updatedTodo","updatedTodos","map","deleteTodo","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mehmetatayurt/Desktop/Software/todoapp/todo-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:5001/api/todos\")\n      .then((response) => response.json())\n      .then((data) => setTodos(data))\n      .catch((error) => console.error(\"Error\", error));\n  }, []);\n\n  const addTodo = (text) => {\n    fetch(\"http://localhost:5001/api/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text }),\n    })\n      .then((response) => response.json())\n      .then((newTodo) => setTodos([...todos, newTodo]))\n      .catch((error) => console.error(\"Error: \", error));\n  };\n\n  const toggleComplete = (id) => {\n    const todo = todos.find((t) => t._id === id);\n    fetch(`http://localhost:5001/api/todos/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ completed: !todo.completed }),\n    })\n      .then((response) => response.json())\n      .then((updatedTodo) => {\n        const updatedTodos = todos.map((t) => (t.id === id ? updatedTodo : t));\n        setTodos(updatedTodos);\n      })\n      .catch((error) => console.error(\"Error: \", error));\n  };\n\n  const deleteTodo = (id) => {\n    fetch(`http://localhost:5001/api/todos/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        const updatedTodos = todos.filter((t) => t.id !== id);\n        setTodos(updatedTodos);\n      })\n      .catch((error) => console.error(\"Error: \", error));\n  };\n\n  return (\n    <>\n      <div>\n        <h1>ToDo List</h1>\n        <TodoForm addTodo={addTodo} />\n        <TodoList\n          todos={todos}\n          toggleComplete={toggleComplete}\n          deleteTodo={deleteTodo}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}